version: 40
jobs:
- name: Build
  steps:
  - !CheckoutStep
    name: Checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: Detect Build Version
    runInContainer: true
    image: alpine
    interpreter: !DefaultInterpreter
      commands: |
        echo "Detecting buildVersion..."
        sed -n 's/^version = \"\(.*\)\+\"/\1/p' pyproject.toml > build_version
        echo Detected version: $(cat build_version)
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !SetBuildVersionStep
    name: Set Build Version
    buildVersion: '@file:build_version@'
    condition: SUCCESSFUL
    optional: false
  - !GenerateChecksumStep
    name: Check Dep Hash
    files: uv.lock pyproject.toml
    targetFile: dep_hash
    condition: SUCCESSFUL
    optional: false
  - !SetupCacheStep
    name: Cache Deps and UV
    key: '@file:dep_hash@'
    paths:
    - .venv
    - .uvcache
    uploadStrategy: UPLOAD_IF_NOT_HIT
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: Install Deps with UV
    runInContainer: true
    image: ghcr.io/astral-sh/uv:python3.12-alpine
    interpreter: !DefaultInterpreter
      commands: |
        uv sync --locked --no-install-project --no-dev --no-editable --cache-dir .uvcache
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: Build Library
    runInContainer: true
    image: ghcr.io/astral-sh/uv:python3.12-alpine
    interpreter: !DefaultInterpreter
      commands: |
        uv build --cache-dir .uvcache
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !PublishArtifactStep
    name: Publish Artifacts
    artifacts: dist/*.whl dist/*.tar.gz
    condition: SUCCESSFUL
    optional: false
  triggers:
  - !BranchUpdateTrigger
    projects: mdbf
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 14400
- name: Publish
  steps:
  - !CheckoutStep
    name: Checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: Detect Build Version
    runInContainer: true
    image: alpine
    interpreter: !DefaultInterpreter
      commands: |
        echo "Detecting buildVersion..."
        sed -n 's/^version = \"\(.*\)\+\"/\1/p' pyproject.toml > build_version
        echo Detected version: $(cat build_version)
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !SetBuildVersionStep
    name: Set Build Version
    buildVersion: '@file:build_version@'
    condition: SUCCESSFUL
    optional: false
  - !GenerateChecksumStep
    name: Check Dep Hash
    files: uv.lock pyproject.toml
    targetFile: dep_hash
    condition: SUCCESSFUL
    optional: false
  - !SetupCacheStep
    name: Cache Deps and UV
    key: '@file:dep_hash@'
    paths:
    - .venv
    - .uvcache
    uploadStrategy: UPLOAD_IF_NOT_HIT
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: Publish to Registry
    runInContainer: true
    image: ghcr.io/astral-sh/uv:python3.12-alpine
    interpreter: !DefaultInterpreter
      commands: |
        uv publish --cache-dir .uvcache --publish-url https://onedev.kiarc.win/mdbf/~pypi --check-url https://onedev.kiarc.win/mdbf/~pypi/simple -u @job_token@ -p @secret:access-token@
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  triggers:
  - !TagCreateTrigger {}
  jobDependencies:
  - jobName: Build
    requireSuccessful: true
    artifacts: '**'
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 14400
